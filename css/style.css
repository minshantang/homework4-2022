/*
1. Edit the body element to use the Poppins font (using Google fonts) 
with serif as a backup. It should also use the image “concrete_seamless.png” 
as a background-image with a backup color of #f1f1f1.
*/
body {
    font-family: "Poppins", serif;
    background-image: url("../images/concrete_seamless.png");
    background-color: #f1f1f1;
}

/*
2. Edit the css for the header tag (all instances) to use flex 
to match our example.
 */
header {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.nav_links {
    /*
    3. Edit the css for the nav_links class to use flex to match our example. 
    Do not modify the list items or the links - modify the nav_links class 
    to use flex.
    */
    display: flex;
    flex-direction: column;
}

/* TODO
4. Style the links so that they have the same color even after they have been 
visited. This is a “challenge” problem. You should not give or receive help 
when completing it.
*/
a:visited {
    color: blue;
}

.card > header {
    /*
    5. Identify the proper selector to style ONLY those header elements that are 
    direct children of a card class. The required styling is the following:
        a. background: #288088,
        b. solid 2px border using #45ADAD,
        c. 20px of padding on the top and the bottom,
        d. 50px border-radius on the top left and right corners.
    */
    background-color: #288088;
    border: solid 2px #45ADAD;
    padding-top: 20px;
    padding-bottom: 20px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
}

.card {
    /*
    6. Check your work. The corners probably aren’t curving quite 
    as you expected. Use Inspect Element to fix this problem. 
    You will need to utilize a second selector.
    */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /*
    8. Edit the css for the card class to match our example.
    Achieve this by using a flex-property to specify an initial “size” of 450px.
    You need to think about this from a “flex” perspective and realize that 
    flex-direction will affect the size of the elements. You can see that 
    in the mobile view they all have the same width.
    */
    flex-basis: 450px;
}

.pricing {
    /*
    7. Edit the css for the pricing class to match our example. You should use 
    flex and the cards should be centered both horizontally and vertically.
    */
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
}

.gallery img {
    /*
    9. Style the images in the gallery class. These elements will have a 
    solid 10px border with a color of #50C7C7, 10px margin on all four sides 
    and a width of 300px.
    */
    border: solid 10px #50C7C7;
    margin: 10px 10px 10px 10px;
    width: 300px;
}

.gallery {
    /*
    10. Edit the css for the gallery class to use flex to match our example. 
    (You may want to look the screen shots from 1200px and 1500px as well 
    - the changes are not from media queries, but from the use of flex.)
    */
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

/*
11. Animate the logo with keyframes. (Here is a keyframes reference.) It should 
start at a width of 25px and grow to 475px. It should also start with an opacity 
of 0 and end with an opacity of 1. The animation should take 5 seconds and only 
happen when the page is loaded.
*/
@keyframes animate {
    from {
        width: 25px;
        opacity: 0;
    } to {
        width: 475px;
        opacity: 1;
    }
}

#logo {
    animation: animate 5s;
}

/*****************************
The following specifications are for when the screen-size is greater than 900px
*****************************/
@media screen and (min-width: 900px) {
    /*
    12. Edit the css for the header tag (all instances) and the nav_links 
    class to match our example using flex-properties. The logo should be as 
    far to the left as possible and the links as far to the right as 
    possible. Use flex properties, NOT position properties.
    */
    header {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .nav_links {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .pricing {
        display: flex;
        flex-direction: row;
        justify-content: center;
    }

    /*
    13. Edit the css for the card class to match our example. Achieve this by 
    using a flex-property to specify a “size” of 250px. Notice that the elements
    do not have the same height, but do have the same width.
    */
    .card {
        display: flex;
        flex-direction: column;
        flex-basis: 250px;
    }

    /*
    14. Modify the first header (the one not inside main) so that it remains 
    visible at the top of the screen even as we scroll down. Make sure that it 
    is always visible. You can see an example of this in the video and in the 
    screenshot at 1200px when scrolled.
    */
    body > header {
        position: sticky;
        top: 0;
    }

    /*
    Self-creativity: Change font of h4 so that the text would fit in the container
    */
    h4 {
        font-size: 20px;
    }
}

/*****************************
The following specifications are for when the user prefers reduced motion
*****************************/
@media screen and (prefers-reduced-motion: reduce) {
    #logo {
        animation: none;
    }
}

/*****************************
The following specifications are for when the page is printed
*****************************/
@media print {
    /*
    16. The background image should be removed.
    16a – add “font-family:Arial, Helvetica, sans-serif;” to your body element.
    */
    body {
        background-image: none;
        font-family: Arial, Arial, Helvetica, sans-serif;
    }

    /*
    17. Edit the nav/nav_links elements so that they are spaced according to 
    the image below.
    */
    nav, .nav_links {
        flex-direction: row;
        width: 100%;
        justify-content: space-evenly;
    }

    /*
    18. Edit the pricing class so that the elements align along the bottom.
    As long as it aligns along the bottom we don't care if the cards aren't the 
    same height
    */
    .pricing {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: flex-end;
        flex-wrap: nowrap;
    }

    /*
    19. The card elements should have a solid border 2px of #45ADDD and use 
    flex-basis of 325px.
    */
    .card {
        border: 2px solid #45ADDD;
        flex-basis: 325px;
    }

    /*
    20. No part of the gallery should be visible.
    */
    .gallery, #gallery {
        display: none;
    }

    /*
    21. Without using list-style-type add the thumbs up entity as shown in the 
    cards.
    */
    .card li:nth-child(2)::after {
        content: "\1F44D";
    }
}